#set class   'QuantumBio'
#set version '2012.10'
#set main    'qbTesth5Main'

// example:
// qbmoebatch -exec "run ['h5test.svl',['c387.h5']]" -exit

function list_models;
function retrieve_qm_score;
function retrieve_residue_pwd;
function retrieve_atom_by_atom_pwd;
function retrieve_nmr_averages;

function qbTesth5Main [h5file]
    write ['{}\n',h5file];
    if isnull h5file then
        return;
    endif
    print list_models [h5file];
    
    write ['length {}\n', length cat list_models [h5file]];
    
    local modelTags = cat list_models [h5file];
    
    write ['length modelTags.Target : {}\n', length modelTags.Target];
    
    write ['{}\n', modelTags.Target];
    write ['{}\n', modelTags.Ligand];
    
    local NMRvalues=cat retrieve_nmr_averages [h5file,modelTags.Target];
    write ['{}\n',NMRvalues.Index];
    write ['{}\n',NMRvalues.Average];
    
//    local modelName = twrite['{}',first cat list_models [h5file]];
//    print modelName;
//    print retrieve_qm_score [h5file, modelTags.Target];
//    print retrieve_residue_pwd ['./AstexSet.h5', 'rec'];
//    print retrieve_atom_by_atom_pwd [h5file, modelName];

//    local modelNameS = cat list_models ['./AstexSet.h5'];
//    write ['length: {}\n', length modelNameS];
//    local idx;
////    for idx = 1, length modelNameS, 1 loop
//        idx = 1;
//        write ['{} {}\n', idx, modelNameS(idx)];
//            print retrieve_qm_score ['./qmscore.h5', twrite ['{}',modelNameS(idx)]];
//            local pwdData = retrieve_residue_pwd ['./qmscore.h5', twrite ['{}',modelNameS(idx)]];
//            write ['length: {}\n',length pwdData];
//            write ['{}\n',pwdData(1)(2)];
//            write ['{}\n',pwdData(1)(3)];
//            write ['{}\n',pwdData(1)(4)];
//
//        idx = 3;
//        write ['{} {}\n', idx, modelNameS(idx)];
//            print retrieve_qm_score ['./qmscore.h5', twrite ['{}',modelNameS(idx)]];
//            pwdData = retrieve_residue_pwd ['./qmscore.h5', twrite ['{}',modelNameS(idx)]];
//            write ['{}\n',pwdData];
endfunction
