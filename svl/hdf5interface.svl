local function jvmqb arg
    local [result,code] = jvm ['HDF5Correspondent', arg];
    if code == 'error' then exit result; endif
    return result;
endfunction


global function qbListModels  arg = jvmqb ['listModels' , [arg] ];
global function qbRetrieveQMScore  arg = jvmqb ['retrieveQMScore' , [arg] ];
global function qbRetrieveResiduePWD  arg  = jvmqb ['retrieveResiduePWD' , [arg]  ];
global function qbRetrieveAtomByAtomPWD  arg  = jvmqb ['retrieveAtomByAtomPWD' , [arg]  ];
global function qbRetrieveAtomByAtomMRM  arg  = jvmqb ['retrieveAtomByAtomMRM' , [arg]  ];
global function qbRetrieveNMRAverages  arg = jvmqb ['retrieveNMRAverages' , [arg] ];
global function qbRetrieveDensities  arg = jvmqb ['retrieveDensities' , [arg] ];
global function qbRetrieveEigenVectors  arg = jvmqb ['retrieveEigenVectors' , [arg] ];
global function qbRetrieveEnergyLevels  arg = jvmqb ['retrieveEnergyLevels' , [arg] ];
global function qbSetNMRAtomSelection  arg = jvmqb ['setNMRAtomSelection' , [arg] ];
global function qbStoreModel  arg = jvmqb ['storeModel' , [arg] ];

// The following function can be used test the new h5 
// example:
// qbmoebatch -exec "qbTesth5Main['c387.h5']" -exit

global function qbTesth5Main [h5file]
    write ['{}\n',h5file];
    if isnull h5file then
        return;
    endif

    print qbListModels [h5file];
    
    write ['length {}\n', length cat qbListModels [h5file]];
    
    local modelTags = cat qbListModels [h5file];
    
    write ['length modelTags.target : {}\n', length modelTags.target];
    
    write ['modelTags.target: {}\n', modelTags.target];
    write ['modelTags.ligand: {}\n', modelTags.ligand];
    
//    local NMRvalues=cat qbRetrieveNMRAverages [h5file,modelTags.target];
//    write ['{}\n',NMRvalues.Index];
//    write ['{}\n',NMRvalues.Average];

    print qbListModels [h5file];
    //print qbRetrieveQMScore [h5file, modelTags.target];
    //print qbRetrieveResiduePWD [h5file, modelTags.target];
    //print qbRetrieveAtomByAtomPWD [h5file, modelTags.target];
    //print qbRetrieveAtomByAtomMRM [h5file, modelTags.target];
    //print qbRetrieveNMRAverages [h5file, modelTags.target];
    //print  qbRetrieveDensities [h5file, modelTags.target];
    //print  qbRetrieveEigenVectors [h5file, modelTags.target];
    //print  qbRetrieveEnergyLevels [h5file, modelTags.target];
    qbSetNMRAtomSelection [h5file, modelTags.target, [0,1,2,10]];

endfunction
