local function jvmqb arg
    local [result,code] = jvm ['HDF5Correspondent', arg];
    if code == 'error' then exit result; endif
    return result;
endfunction


global function qbListModels  arg = jvmqb ['listModels' , [arg] ];
global function qbRetrieveQMScore  arg = jvmqb ['retrieveQMScore' , [arg] ];
global function qbRetrieveResiduePWD  arg  = jvmqb ['retrieveResiduePWD' , [arg]  ];
global function qbRetrieveAtomByAtomPWD  arg  = jvmqb ['retrieveAtomByAtomPWD' , [arg]  ];
global function qbRetrieveAtomByAtomMRM  arg  = jvmqb ['retrieveAtomByAtomMRM' , [arg]  ];
global function qbRetrieveNMRAverages  arg = jvmqb ['retrieveNMRAverages' , [arg] ];

// The following function can be used test the new h5 
// example:
// qbmoebatch -exec "qbTesth5Main['c387.h5']" -exit

function qbTesth5Main [h5file]
    write ['{}\n',h5file];
    if isnull h5file then
        return;
    endif

    print qbListModels [h5file];
    
    write ['length {}\n', length cat qbListModels [h5file]];
    
    local modelTags = cat qbListModels [h5file];
    
    write ['length modelTags.Target : {}\n', length modelTags.Target];
    
    write ['modelTags.Target: {}\n', modelTags.Target];
    write ['modelTags.Ligand: {}\n', modelTags.Ligand];
    
//    local NMRvalues=cat qbRetrieveNMRAverages [h5file,modelTags.Target];
//    write ['{}\n',NMRvalues.Index];
//    write ['{}\n',NMRvalues.Average];

    print qbListModels [h5file];
    print qbRetrieveQMScore [h5file, modelTags.Target];
    print qbRetrieveResiduePWD [h5file, modelTags.Target];
    print qbRetrieveAtomByAtomPWD [h5file, modelTags.Target];
    print qbRetrieveAtomByAtomMRM [h5file, modelTags.Target];
    print qbRetrieveNMRAverages [h5file, modelTags.Target];

endfunction
