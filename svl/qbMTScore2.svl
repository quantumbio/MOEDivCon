#svl

// ScoreMTScore_dG takes receptor atoms and ligand atoms and returns an 
// estimate of the binding affinity using the MTScore dG. This is a one-shot 
// calculation
// FUNCTION : 	Calculate the MTScore score between recatoms and ligatoms
// INPUT: 	recatoms = receptor atoms
//		ligatoms = ligand atoms
//		ff = options (1 = [fast]endpoint parameters,2 = [slower]endemble parameters)
//		rec = if docking cached receptor energy terms.
// RETURN:	MTScore score.
// NOTE:	This function must be used within a private system.

function qbWS_MTScore;

local function ScoreMTScore_dG [recatoms, ligatoms, ff, rec]
    // This function is effectively a "wrapper" for the call to the MTScore webservice
    local tmpJSON = qbWS_MTScore [diff [Atoms[], _Atoms '$$ligand'],_Atoms '$$ligand'];
// write ['tmpJSON: {} \n', tmpJSON];
    return atof tmpJSON.('MTScoreES');
endfunction

global function dock_score_qbMTScore [cmd, arg, opt]
    local ligpos = [], lig = [], rec=[], score;

    const MTSCORE_OPT_DEFAULTS = [
        ['mttyperdio',      'Endstate'         ]
    ];
    
    const MTTYPES = [
        'Endstate',
        'Ensemble'
    ];

    local DEFAULTS = [
        qbWSHostname: GetRC ['qbWSHostname','localhost'],
        qbWSPort:     GetRCNumber ['qbWSPort',8080]
    ];
    
    const PANEL = [
        Mbox : [
            Text : [
                title: 'Hostname:', name: 'qbWSHostname', type: 'char',
                shortcut: ['localhost'],
                bubbleHelp: 'Enter hostname (default: localhost).'
            ],
                Text : [
                title: 'Port:', name: 'qbWSPort', type: 'int',
                shortcut: ['8080','8081','8082'],
                bubbleHelp: 'Enter the port number (default: 8080).'
            ]
        ]
    ];
    
    write ['DEBUG: cmd: {} | arg: {}\n', cmd, arg];

    if cmd === 'ID' then
        return 'MTScoreES dG [QuantumBio]';
    elseif cmd === 'configpanelwidgets' then
        return PANEL;
    elseif cmd === 'configpanelevent' then   // arg = [val, trig]
        local [val, trig, wkey] = arg;
        return 0;
    elseif cmd === 'configvalues' then        // qrg = val
        return tagcat [arg, DEFAULTS];
    elseif cmd === 'openReceptor' then      // arg = rec
        return;
    elseif cmd === 'closeReceptor' then     // arg = rec
        return;
    elseif cmd === 'openLigand' then        // arg = lig
        return;
    elseif cmd === 'closeLigand' then       // arg = lig
        return;
    elseif not (cmd === 'score') then       // arg = [ligpos, lig, rec]
        return;
    endif
    
    [ligpos, lig, rec] = arg;
    
    opt = tagcat [opt, DEFAULTS];
    SetRC ['qbWSHostname',opt.qbWSHostname];
    SetRCNumber ['qbWSPort',opt.qbWSPort];

    local [osys, nsys] = SystemPush [];
    oDestroy Chains [];
    
    local recatoms = cat oAtoms mol_Create *rec.mol;
    local ligatoms = cat oAtoms mol_Create *lig.mol;
    aSetPos [ligatoms, ligpos];

local starttime = clock[];
    score = ScoreMTScore_dG [recatoms, ligatoms];
write ['MTScoreES (dG): {} kcal/mol in {} secs\n', score, (clock[] - starttime)];
        
    oDestroy Chains [];
    SystemPop [osys, nsys];
    return score;
endfunction


#eof
